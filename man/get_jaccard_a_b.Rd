% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_jaccard_a_b.R
\name{get_jaccard_a_b}
\alias{get_jaccard_a_b}
\title{get_jaccard_a_b}
\usage{
get_jaccard_a_b(
  kmer_counts_q,
  kmer_counts_t,
  k = 6,
  min_jaccard = 0.01,
  sparse_threshold = 0.1,
  sparse_n = 20,
  use_rcpp = TRUE,
  use_sparse = TRUE,
  use_single = FALSE,
  threads = 1,
  num_per_chunk_q = 50000,
  num_per_chunk_t = 50000,
  aa2int = FALSE
)
}
\arguments{
\item{kmer_counts_q}{kmer_counts}

\item{kmer_counts_t}{kmer_counts}

\item{k}{kmer length [default: 6]}

\item{min_jaccard}{min jaccard distance to report [default: 0.01]}

\item{sparse_threshold}{use kmer subset to evaluate change search strategy
[default: 0.1]}

\item{sparse_n}{number of kmer subset to get sparse threshold [default: 20]}

\item{use_rcpp}{use rcpp jaccard distance calculation[ default: TRUE]}

\item{use_sparse}{use rcpp sparse approach [default: TRUE]}

\item{use_single}{use single threaded rcpp and parallel chunk processing
[FALSE]}

\item{threads}{number of parallel threads per chunk [default: 1]}

\item{num_per_chunk_q}{specify max number per chunk q [default: 50000]}

\item{num_per_chunk_t}{specify max number per chunk t [default: 50000]}

\item{aa2int}{convert aa to Int64 [default: FALSE]}
}
\value{
\code{data.frame}
}
\description{
This function calculates jaccard distance for all pairwise
comparison between two kmer_counts list objects.
If the parameter k is set, mash distance will be reported.
Only jaccard distances will be reported if threshold is met.
}
\examples{
data(hiv, package="MSA2dist")
l <- hiv |>
    MSA2dist::cds2aa() |>
    korthoR::count_kmers(k=6)
df <- korthoR::get_jaccard_a_b(
    kmer_counts_q=l,
    kmer_counts_t=l,
    k=6,
    min_jaccard=0.01)
df
# to use Int64 kmers;
# use:
# count_kmers(..., aa2int=TRUE);
# change:
# get_jaccard_a_b(..., aa2int=TRUE)
lint64 <- hiv |>
     MSA2dist::cds2aa() |>
     korthoR::count_kmers(
     k=6,
     aa2int=TRUE)
df <- korthoR::get_jaccard_a_b(
    kmer_counts_q=lint64,
    kmer_counts_t=lint64,
    k=6,
    min_jaccard=0.01,
    threads=2,
    aa2int=TRUE)
df
# to use multiple threads;
# change:
# get_jaccard_a_b(..., threads=2)
df <- korthoR::get_jaccard_a_b(
    kmer_counts_q=l,
    kmer_counts_t=l,
    k=6,
    min_jaccard=0.01,
    threads=2)
df
# to change chunk size;
# change:
# get_jaccard_a_b(..., num_per_chunk_q; num_per_chunk_t)
df <- korthoR::get_jaccard_a_b(
    kmer_counts_q=l,
    kmer_counts_t=l,
    k=6,
    min_jaccard=0.01,
    threads=2,
    num_per_chunk_q=2,
    num_per_chunk_t=5)
df
# to force all vs all calculation;
# change:
# get_jaccard_a_b(..., use_sparse=FALSE)
lint64 <- hiv |>
     MSA2dist::cds2aa() |>
     korthoR::count_kmers(
     k=6,
     aa2int=TRUE)
df <- korthoR::get_jaccard_a_b(
    kmer_counts_q=lint64,
    kmer_counts_t=lint64,
    k=6,
    min_jaccard=0.01,
    use_sparse=FALSE,
    threads=2,
    aa2int=TRUE)
df
}
\author{
Kristian K Ullrich
}
