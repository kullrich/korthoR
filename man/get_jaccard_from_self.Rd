% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_jaccard_from_self.R
\name{get_jaccard_from_self}
\alias{get_jaccard_from_self}
\title{get_jaccard_from_self}
\usage{
get_jaccard_from_self(
  kmer_counts_q,
  k = 6,
  min_jaccard = 0.01,
  use_rcpp = TRUE,
  use_sparse = TRUE,
  threads = 1,
  num_per_chunk = 1000
)
}
\arguments{
\item{kmer_counts_q}{kmer_counts}

\item{k}{kmer length [default: 6]}

\item{min_jaccard}{min jaccard distance to report [default: 0.01]}

\item{use_rcpp}{use rcpp jaccard distance calculation[ default: TRUE]}

\item{use_sparse}{use rcpp sparse approach [default: TRUE]}

\item{threads}{number of parallel threads [default: 1]}

\item{num_per_chunk}{specify max number per chunk [default: 1000]}
}
\value{
\code{data.frame}
}
\description{
This function calculates jaccard distance for all pairwise
comparison within one kmer_counts list object.
If the parameter k is set, mash distance will be reported.
Only jaccard distances will be reported if threshold is met.
}
\examples{
data(hiv, package="MSA2dist")
l <- hiv |>
    MSA2dist::cds2aa() |>
    korthoR::count_kmers(k=6)
df <- korthoR::get_jaccard_from_self(
    kmer_counts_q=l,
    k=6,
    min_jaccard=0.01)
df
# to use multiple threads
#df <- korthoR::get_jaccard_from_self(
#    kmer_counts_q=l,
#    k=6,
#    min_jaccard=0.01,
#    threads=2)
#df
# to use multiple threads and change chunk size
#df <- korthoR::get_jaccard_from_self(
#    kmer_counts_q=l,
#    k=6,
#    min_jaccard=0.01,
#    threads=2,
#    num_per_chunk=5)
#df
}
\author{
Kristian K Ullrich
}
